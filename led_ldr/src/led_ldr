#!/usr/bin/env python

import RPi.GPIO as gpio
import time
import rospy
from std_msgs.msg import Float32


def subscriber():
	sub=rospy.Subscriber('/LDR_data',Float32,callback_function)

	rospy.spin()

led1 = 2 
led2 = 4
led3 = 22
led4 = 10
led5 = 9
led6 = 11
led7 = 25
led8 = 8

gpio.setmode(gpio.BCM)
gpio.setwarnings(False)
gpio.setup(led1, gpio.OUT)
gpio.setup(led2, gpio.OUT)
gpio.setup(led3, gpio.OUT)
gpio.setup(led4, gpio.OUT)
gpio.setup(led5, gpio.OUT)
gpio.setup(led6, gpio.OUT)
gpio.setup(led7, gpio.OUT)
gpio.setup(led8, gpio.OUT)


	

def callback_function(message):
	rospy.loginfo("Parlaklik : %f"%message.data)
	while True:
		if   message.data <= 40 :
			gpio.output(led1, True)
			gpio.output(led2, False)
			gpio.output(led3, False)
			gpio.output(led4, False)
			gpio.output(led5, False)
			gpio.output(led6, False)
			gpio.output(led7, False)
			gpio.output(led8, False)
  		elif message.data > 40 and message.data <= 70 :
			gpio.output(led1, True)
			gpio.output(led2, True)
			gpio.output(led3, False)
			gpio.output(led4, False)
			gpio.output(led5, False)
			gpio.output(led6, False)
			gpio.output(led7, False)
			gpio.output(led8, False)
		elif message.data > 70 and message.data <= 100 :
			gpio.output(led1, True)
			gpio.output(led2, True)
			gpio.output(led3, True)
			gpio.output(led4, False)
			gpio.output(led5, False)
			gpio.output(led6, False)
			gpio.output(led7, False)
			gpio.output(led8, False)
		elif message.data > 100 and message.data <= 130 :
			gpio.output(led1, True)
			gpio.output(led2, True)
			gpio.output(led3, True)
			gpio.output(led4, True)
			gpio.output(led5, False)
			gpio.output(led6, False)
			gpio.output(led7, False)
			gpio.output(led8, False)
		elif message.data > 130 and message.data <= 160 :
			gpio.output(led1, True)
			gpio.output(led2, True)
			gpio.output(led3, True)
			gpio.output(led4, True)
			gpio.output(led5, True)
			gpio.output(led6, False)
			gpio.output(led7, False)
			gpio.output(led8, False)
		elif message.data > 170 and message.data <= 190 :
			gpio.output(led1, True)
			gpio.output(led2, True)
			gpio.output(led3, True)
			gpio.output(led4, True)
			gpio.output(led5, True)
			gpio.output(led6, True)
			gpio.output(led7, False)
			gpio.output(led8, False)
		elif message.data > 190 and message.data <= 225 :
			gpio.output(led1, True)
			gpio.output(led2, True)
			gpio.output(led3, True)
			gpio.output(led4, True)
			gpio.output(led5, True)
			gpio.output(led6, True)
			gpio.output(led7, True)
			gpio.output(led8, False)
		elif message.data > 855 :
			gpio.output(led1, True)
			gpio.output(led2, True)
			gpio.output(led3, True)
			gpio.output(led4, True)
			gpio.output(led5, True)
			gpio.output(led6, True)
			gpio.output(led7, True)
			gpio.output(led8, True)
		break

if __name__ == "__main__":
	rospy.init_node("led_ldr")
	subscriber()
	

	
gpio.output(led1, False)
gpio.output(led2, False)
gpio.output(led3, False)
gpio.output(led4, False)
gpio.output(led5, False)
gpio.output(led6, False)
gpio.output(led7, False)
gpio.output(led8, False)

